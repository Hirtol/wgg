//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "agg_ingredients_links")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub provider_id: i32,
    pub provider_ingr_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::providers::Entity",
        from = "Column::ProviderId",
        to = "super::providers::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Providers,
    #[sea_orm(
        belongs_to = "super::agg_ingredients::Entity",
        from = "Column::Id",
        to = "super::agg_ingredients::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    AggIngredients,
}

impl Related<super::providers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Providers.def()
    }
}

impl Related<super::agg_ingredients::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AggIngredients.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
